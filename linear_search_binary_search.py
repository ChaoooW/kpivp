# -*- coding: utf-8 -*-
"""linear_search_binary_search.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gquoKuf1w0MjSQV2K2t83EFysw5GVAPT
"""

import random

#linear_search
#time complexity: O(n)
#Space complexity: O(1)

def linear_search(arr, x):
  
    for i in range(len(arr)):
  
        if arr[i] == x:
            return i
    return -1

#binary_search
#time complexity: O(lg n)
#Space complexity: O(1)

def binary_search(arr, x):
    arr.sort()
    low = 0
    high = len(arr) - 1
    mid = 0
 
    while low <= high:
 
        mid = (high + low) // 2
        if arr[mid] < x:
            low = mid + 1
        elif arr[mid] > x:
            high = mid - 1
        else:
            return mid
    return -1

def print_list(arr, size):
    print()
    for i in range(size):
        print ("% d"% arr[i], end =",")
    print()

if __name__ == "__main__":
  print("generating int list...")
  int_list = random.sample(range(1, 50), 10)
  print_list(int_list, len(int_list))
  random_i = random.randint(0,len(int_list))
  print(f'linear search int_list[{random_i}]:{int_list[random_i]}:{linear_search(int_list,int_list[random_i]) != -1}')

  print(f'binary_search int_list[{random_i}]:{int_list[random_i]}:{binary_search(int_list,int_list[random_i]) != -1}')